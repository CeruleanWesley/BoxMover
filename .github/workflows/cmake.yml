name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3
    
    - name: install_dependencies
      run: |
        sudo apt-get install libsdl2-dev
        sudo apt-get install libsdl2-ttf-dev
        
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build
      
    - name: Test
      working-directory: ${{github.workspace}}/build/test
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail   
      run: |
           export GTEST_OUTPUT=xml:${{ github.workspace }}/build/result.xml
           ./game_test -C Debug --output-on-failure --verbose
           
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: "${{ github.workspace }}/build/result.xml"
        
    #- name: Ubuntu Install lcov
    #  run: sudo apt install -y lcov
      
    - name: Setup LCOV
      uses: hrishikesh-kadam/setup-lcov@v1
      
    - name: Create lcov file
      run: lcov -c -d "${{ github.workspace }}/build/src/CMakeFiles/BoxMoverLib.dir/" -o "${{ github.workspace }}/build/lcov.info"

    - name: Remove external code coverage
      run: lcov -r "${{ github.workspace }}/build/lcov.info" "/usr/*" -o "${{ github.workspace }}/build/lcov.info"
      
    - name: Report code coverage
      uses: romeovs/lcov-reporter-action@v0.2.21
      with:
        lcov-file: "${{ github.workspace }}/build/lcov.info"  
        github-token: ${{ secrets.GITHUB_TOKEN }}
